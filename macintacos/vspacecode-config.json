{
  "vspacecode.bindingOverrides": [
    {
      "bindings": [
        {
          "command": "workbench.action.openGlobalSettings",
          "key": ",",
          "name": "Open global settings",
          "type": "command"
        },
        {
          "command": "workbench.action.selectIconTheme",
          "key": "i",
          "name": "Choose icon theme",
          "type": "command"
        },
        {
          "command": "workbench.action.openGlobalKeybindings",
          "key": "k",
          "name": "Open global keybindings",
          "type": "command"
        },
        {
          "command": "workbench.action.openGlobalKeybindingsFile",
          "key": "K",
          "name": "Open global keybindings JSON",
          "type": "command"
        },
        {
          "command": "workbench.action.configureLanguageBasedSettings",
          "key": "l",
          "name": "Open language settings",
          "type": "command"
        },
        {
          "command": "workbench.action.openSnippets",
          "key": "n",
          "name": "Open user snippets",
          "type": "command"
        },
        {
          "command": "workbench.action.openSettingsJson",
          "key": "s",
          "name": "Open global settings JSON",
          "type": "command"
        },
        {
          "command": "workbench.action.selectTheme",
          "key": "t",
          "name": "Choose color theme",
          "type": "command"
        },
        {
          "command": "workbench.userDataSync.actions.syncNow",
          "key": "u",
          "name": "Update/upload settings",
          "type": "command"
        },
        {
          "command": "workbench.action.openWorkspaceSettings",
          "key": "w",
          "name": "Open workspace settings",
          "type": "command"
        },
        {
          "command": "workbench.action.openWorkspaceSettingsFile",
          "key": "W",
          "name": "Open workspace settings JSON",
          "type": "command"
        },
        {
          "bindings": [
            {
              "command": "workbench.action.toggleDevTools",
              "key": "d",
              "name": "Show developer tools",
              "type": "command"
            },
            {
              "command": "workbench.action.setLogLevel",
              "key": "l",
              "name": "Set log level...",
              "type": "command"
            },
            {
              "command": "workbench.action.showLogs",
              "key": "L",
              "name": "Show logs...",
              "type": "command"
            },
            {
              "command": "workbench.action.showRuntimeExtensions",
              "key": "r",
              "name": "Show running extensions",
              "type": "command"
            },
            {
              "command": "workbench.action.openProcessExplorer",
              "key": "p",
              "name": "Open Process Explorer",
              "type": "command"
            }
          ],
          "key": "d",
          "name": "Developer...",
          "type": "bindings"
        }
      ],
      "keys": ",",
      "name": "Settings/Preferences",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "bookmarks.toggle",
          "key": "m",
          "name": "Toggle bookmark",
          "type": "command"
        },
        {
          "command": "bookmarks.jumpToNext",
          "key": "n",
          "name": "Jump to next bookmark",
          "type": "command"
        },
        {
          "command": "bookmarks.jumpToPrevious",
          "key": "p",
          "name": "Jump to previous bookmark",
          "type": "command"
        },
        {
          "command": "workbench.view.extension.bookmarks",
          "key": "o",
          "name": "Open Bookmarks explorer",
          "type": "command"
        },
        {
          "command": "bookmarks.list",
          "key": "b",
          "name": "Open list of bookmarks in current file",
          "type": "command"
        },
        {
          "command": "bookmarks.listFromAllFiles",
          "key": "B",
          "name": "Open list of bookmarks in all files",
          "type": "command"
        }
      ],
      "keys": "B",
      "name": "Bookmarks...",
      "type": "bindings"
    },
    {
      "command": "workbench.view.extension.project-manager",
      "keys": "S.M",
      "name": "Show Project Manager",
      "type": "command"
    },
    {
      "command": "workbench.view.extension.github-pull-requests",
      "keys": "S.P",
      "name": "Show Github Pull Requests",
      "type": "command"
    },
    {
      "command": "workbench.view.extension.todo-tree-container",
      "keys": "S.T",
      "name": "Show TODOs",
      "type": "command"
    },
    {
      "command": "workbench.action.files.openFileFolder",
      "keys": "S.f",
      "name": "Show OS file picker",
      "type": "command"
    },
    {
      "command": "workbench.view.extension.mongoDB",
      "keys": "S.m",
      "name": "Show MongoDB",
      "type": "command"
    },
    {
      "command": "toggleVim",
      "keys": "T.v",
      "name": "Toggle vim",
      "type": "command"
    },
    {
      "command": "workbench.action.navigateBack",
      "keys": "[",
      "name": "Go back",
      "type": "command"
    },
    {
      "command": "workbench.action.navigateForward",
      "keys": "]",
      "name": "Go forward",
      "type": "command"
    },
    {
      "command": "workbench.action.nextEditor",
      "keys": "`",
      "name": "Next Editor (regardless of group)",
      "type": "command"
    },
    {
      "command": "workbench.action.closeOtherEditors",
      "keys": "b.D",
      "name": "Close unmodified editors",
      "type": "command"
    },
    {
      "args": {
        "after": [",", "≈", "g", "g", "y", "G", "'", "≈", "z", "z"]
      },
      "command": "vim.remap",
      "keys": "b.Y",
      "name": "Yank the whole buffer",
      "type": "command"
    },
    {
      "command": "workbench.action.nextEditorInGroup",
      "keys": "b.`",
      "name": "Next Editor (current group)",
      "type": "command"
    },
    {
      "command": "outline.focus",
      "keys": "b.o",
      "name": "Focus outline for buffer",
      "type": "command"
    },
    {
      "command": "workbench.action.previousEditorInGroup",
      "keys": "b.~",
      "name": "Previous Editor (current group)",
      "type": "command"
    },
    {
      "bindings": [
        {
          "command": "editor.action.commentLine",
          "key": "l",
          "name": "Comment/uncomment line(s)",
          "type": "command"
        },
        {
          "command": "code-runner.run",
          "key": "r",
          "name": "Run code in curent file",
          "type": "command"
        },
        {
          "commands": [
            "editor.action.clipboardCopyAction",
            "editor.action.commentLine"
          ],
          "key": "y",
          "name": "Copy selection and comment line",
          "type": "command"
        }
      ],
      "keys": "c",
      "name": "Code Actions...",
      "type": "bindings"
    },
    {
      "command": "workbench.debug.action.toggleRepl",
      "keys": "d.t",
      "name": "Toggle Debug Console view",
      "type": "command"
    },
    {
      "command": "workbench.action.output.toggleOutput",
      "keys": "e.o",
      "name": "Toggle output view",
      "type": "command"
    },
    {
      "command": "outline.focus",
      "keys": "f.O",
      "name": "Focus file outline view",
      "type": "command"
    },
    {
      "command": "fileutils.renameFile",
      "keys": "f.R",
      "name": "Rename file",
      "type": "command"
    },
    {
      "command": "workbench.action.openSettings",
      "keys": "f.e.D",
      "name": "Open settings UI",
      "type": "command"
    },
    {
      "command": "workbench.action.reloadWindow",
      "keys": "f.e.R",
      "name": "Reload configuration",
      "type": "command"
    },
    {
      "command": "workbench.action.openSettingsJson",
      "keys": "f.e.d",
      "name": "Open settings JSON",
      "type": "command"
    },
    {
      "command": "workbench.action.quickOpen",
      "keys": "f.f",
      "name": "Open file...",
      "type": "command"
    },
    {
      "command": "file-browser.open",
      "keys": "f.n",
      "name": "New file (via File Browser)",
      "type": "command"
    },
    {
      "command": "workbench.action.files.openFileFolder",
      "keys": "f.o",
      "name": "Open file browser",
      "type": "command"
    },
    {
      "bindings": [
        {
          "command": "gitlens.diffWithPrevious",
          "key": "d",
          "name": "...diff current file against previous revision",
          "type": "command"
        },
        {
          "command": "gitHistory.diffFileAtCommitAgainstCurrent",
          "key": "D",
          "name": "...diff current file against previous revision (choose commit)",
          "type": "command"
        },
        {
          "command": "vscsm.fileHistoryInSublimeMerge",
          "key": "f",
          "name": "...open file history in Sublime Merge",
          "type": "command"
        },
        {
          "command": "vscsm.lineHistoryInSublimeMerge",
          "key": "l",
          "name": "...open line history in Sublime Merge",
          "type": "command"
        }
      ],
      "keys": ["g", "f"],
      "name": "File...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "openInGitHub.openFileBlame",
          "key": "b",
          "name": "...open file blame",
          "type": "command"
        },
        {
          "command": "openInGitHub.openFile",
          "key": "f",
          "name": "...open file",
          "type": "command"
        },
        {
          "command": "openInGitHub.openFileHistory",
          "key": "h",
          "name": "...open file history",
          "type": "command"
        },
        {
          "command": "openInGitHub.openIssues",
          "key": "i",
          "name": "...open repo issues",
          "type": "command"
        },
        {
          "command": "openInGitHub.openProject",
          "key": "p",
          "name": "...open project",
          "type": "command"
        },
        {
          "command": "openInGitHub.openPullRequests",
          "key": "r",
          "name": "...open pull requests",
          "type": "command"
        }
      ],
      "keys": ["g", "g"],
      "name": "Github...",
      "type": "bindings"
    },
    {
      "command": "gitlens.showCommitSearch",
      "keys": "g./",
      "name": "Search history",
      "type": "command"
    },
    {
      "command": "git.checkout",
      "keys": "g.B",
      "name": "Branch",
      "type": "command"
    },
    {
      "command": "gitlens.fetchRepositories",
      "keys": "g.F",
      "name": "Fetch repositories",
      "type": "command"
    },
    {
      "command": "gitlens.gitCommands",
      "keys": "g.G",
      "name": "Git commands",
      "type": "command"
    },
    {
      "keys": "g.S",
      "position": -1
    },
    {
      "command": "vscsm.blameInSublimeMerge",
      "keys": "g.b",
      "name": "Show blame in Sublime Merge",
      "type": "command"
    },
    {
      "command": "githd.viewBranchHistory",
      "keys": "g.h",
      "name": "View history",
      "type": "command"
    },
    {
      "command": "git.pull",
      "keys": "g.l",
      "name": "Pull",
      "type": "command"
    },
    {
      "keys": "g.m",
      "position": -1
    },
    {
      "command": "multiCommand.moveToNextChangeAndShow",
      "keys": "g.n",
      "name": "Move to next change and show",
      "type": "command"
    },
    {
      "command": "multiCommand.moveToPreviousChangeAndShow",
      "keys": "g.p",
      "name": "Move to previous change and show",
      "type": "command"
    },
    {
      "command": "vscsm.openInSublimeMerge",
      "keys": "g.s",
      "name": "View status in Sublime Merge",
      "type": "command"
    },
    {
      "keys": "h.k",
      "position": -1
    },
    {
      "bindings": [
        {
          "commands": [
            "copy-relative-path-and-line-numbers.path-only",
            "execPaste"
          ],
          "key": "r",
          "name": "...relative path of current file (copies it too)",
          "type": "command"
        },
        {
          "command": "extension.relativePath",
          "key": "R",
          "name": "...relative path of other file in project",
          "type": "command"
        },
        {
          "commands": ["copy-relative-path-and-line-numbers.both", "execPaste"],
          "key": "l",
          "name": "...relative path of current file AND selected line numbers (copies it too)",
          "type": "command"
        }
      ],
      "keys": ["i", "f"],
      "name": "Insert file...",
      "type": "bindings"
    },
    {
      "command": "workbench.action.showAllSymbols",
      "keys": "j.I",
      "name": "Jump to symbol in project",
      "type": "command"
    },
    {
      "command": "breadcrumbs.focusAndSelect",
      "keys": "j.b",
      "name": "Jump to breadcrumbs",
      "type": "command"
    },
    {
      "command": "workbench.action.gotoMethod",
      "keys": "j.m",
      "name": "Jump to method/function in file",
      "type": "command"
    },
    {
      "keys": "j.v",
      "position": -1
    },
    {
      "command": "workbench.action.positionPanelLeft",
      "keys": "l.H",
      "name": "Move panel left",
      "type": "command"
    },
    {
      "command": "workbench.action.positionPanelBottom",
      "keys": "l.J",
      "name": "Move panel bottom",
      "type": "command"
    },
    {
      "command": "workbench.action.positionPanelRight",
      "keys": "l.L",
      "name": "Move panel right",
      "type": "command"
    },
    {
      "command": "workbench.action.toggleSidebarVisibility",
      "keys": "l.b",
      "name": "Toggle sidebar",
      "type": "command"
    },
    {
      "command": "workbench.action.closePanel",
      "keys": "l.c",
      "name": "Close panel",
      "type": "command"
    },
    {
      "command": "workbench.action.focusPanel",
      "keys": "l.f",
      "name": "Focus panel",
      "type": "command"
    },
    {
      "command": "workbench.action.togglePanel",
      "keys": "l.o",
      "name": "Toggle panel",
      "type": "command"
    },
    {
      "command": "workbench.actions.view.problems",
      "keys": "l.p",
      "name": "Focus Problems panel",
      "type": "command"
    },
    {
      "bindings": [
        {
          "command": "go.show.commands",
          "key": " ",
          "name": "Show all commands",
          "type": "command"
        },
        {
          "bindings": [
            {
              "command": "go.test.cancel",
              "key": "c",
              "name": "Cancel running tets",
              "type": "command"
            },
            {
              "command": "go.apply.coverprofile",
              "key": "P",
              "name": "Apply cover profile",
              "type": "command"
            },
            {
              "command": "go.subtest.cursor",
              "key": "s",
              "name": "Subtest at cursor",
              "type": "command"
            },
            {
              "command": "go.debug.cursor",
              "key": "d",
              "name": "Debug test at cursor",
              "type": "command"
            },
            {
              "command": "go.test.cursor",
              "key": "f",
              "name": "Test function at cursor",
              "type": "command"
            },
            {
              "command": "go.test.file",
              "key": "F",
              "name": "Test file",
              "type": "command"
            },
            {
              "command": "go.test.package",
              "key": "p",
              "name": "Test package",
              "type": "command"
            },
            {
              "command": "go.test.workspace",
              "key": "w",
              "name": "Test packages in workspace",
              "type": "command"
            },
            {
              "command": "go.test.previous",
              "key": "l",
              "name": "Test previous",
              "type": "command"
            },
            {
              "bindings": [
                {
                  "command": "go.benchmark.package",
                  "key": "p",
                  "name": "Benchmark package",
                  "type": "command"
                },
                {
                  "command": "go.benchmark.file",
                  "key": "F",
                  "name": "Benchmark file",
                  "type": "command"
                },
                {
                  "command": "go.benchmark.cursor",
                  "key": "f",
                  "name": "Benchmark function at cursor",
                  "type": "command"
                }
              ],
              "key": "b",
              "name": "Benchmarks...",
              "type": "bindings"
            },
            {
              "bindings": [
                {
                  "command": "go.test.coverage",
                  "key": "c",
                  "name": "Toggle test coverage in current package",
                  "type": "command"
                },
                {
                  "command": "go.toggle.test.file",
                  "key": "f",
                  "name": "Toggle open test file",
                  "type": "command"
                }
              ],
              "key": "t",
              "name": "Toggle...",
              "type": "bindings"
            },
            {
              "bindings": [
                {
                  "command": "go.test.generate.package",
                  "key": "p",
                  "name": "Generate unit tests for package",
                  "type": "command"
                },
                {
                  "command": "go.test.generate.file",
                  "key": "F",
                  "name": "Generate unit tests for file",
                  "type": "command"
                },
                {
                  "command": "go.test.generate.function",
                  "key": "f",
                  "name": "Generate unit tests for function",
                  "type": "command"
                }
              ],
              "key": "g",
              "name": "Generate...",
              "type": "bindings"
            }
          ],
          "key": "t",
          "name": "Test...",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "command": "editor.action.formatDocument",
              "key": "=",
              "name": "Format document",
              "type": "command"
            },
            {
              "command": "editor.action.formatDocument",
              "key": "d",
              "name": "Format document with...",
              "type": "command"
            },
            {
              "command": "editor.action.formatChanges",
              "key": "m",
              "name": "Format modified lines only",
              "type": "command"
            },
            {
              "command": "editor.action.formatSelection",
              "key": "s",
              "name": "Format selection",
              "type": "command"
            },
            {
              "command": "editor.action.formatSelection.multiple",
              "key": "S",
              "name": "Format selection with...",
              "type": "command"
            }
          ],
          "key": "=",
          "name": "Format...",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "command": "go.fill.struct",
              "key": "f",
              "name": "Fill struct",
              "type": "command"
            },
            {
              "command": "go.add.tags",
              "key": "t",
              "name": "Add tags to struct fields",
              "type": "command"
            },
            {
              "command": "go.remove.tags",
              "key": "T",
              "name": "Remove tags from struct fields",
              "type": "command"
            },
            {
              "command": "go.import.add",
              "key": "i",
              "name": "Add import",
              "type": "command"
            },
            {
              "command": "go.impl.cursor",
              "key": "I",
              "name": "Generate interface stubs",
              "type": "command"
            }
          ],
          "key": "i",
          "name": "Insert/remove...",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "command": "go.languageserver.restart",
              "key": "R",
              "name": "Restart language server",
              "type": "command"
            },
            {
              "command": "go.environment.choose",
              "key": "c",
              "name": "Choose Go environment",
              "type": "command"
            },
            {
              "command": "go.gopath",
              "key": "g",
              "name": "Show current GOPATH",
              "type": "command"
            },
            {
              "command": "go.locate.tools",
              "key": "l",
              "name": "Locate configured Go tools",
              "type": "command"
            },
            {
              "command": "go.tools.install",
              "key": "i",
              "name": "Install/update tools",
              "type": "command"
            }
          ],
          "key": "e",
          "name": "Environment...",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "command": "editor.action.revealDefinition",
              "key": "d",
              "name": "Go to definition",
              "type": "command"
            },
            {
              "command": "editor.action.peekDefinition",
              "key": "D",
              "name": "Peek definition",
              "type": "command"
            },
            {
              "command": "references-view.findReferences",
              "key": "R",
              "name": "Find all references",
              "type": "command"
            },
            {
              "command": "editor.action.referenceSearch.trigger",
              "key": "r",
              "name": "Peek references",
              "type": "command"
            },
            {
              "command": "editor.action.goToTypeDefinition",
              "key": "t",
              "name": "Go to type definition",
              "type": "command"
            },
            {
              "command": "editor.action.peekTypeDefinition",
              "key": "T",
              "name": "Peek type definition",
              "type": "command"
            },
            {
              "command": "extension.dash.specific",
              "key": "E",
              "name": "Go to documentation in Dash",
              "type": "command"
            },
            {
              "command": "workbench.action.problems.focus",
              "key": "e",
              "name": "Go to errors/problems",
              "type": "command"
            },
            {
              "command": "workbench.action.gotoMethod",
              "key": "m",
              "name": "Go to method in file",
              "type": "command"
            },
            {
              "command": "workbench.action.gotoSymbol",
              "key": "i",
              "name": "Find symbol in file",
              "type": "command"
            },
            {
              "command": "workbench.action.showAllSymbols",
              "key": "I",
              "name": "Find symbol in project",
              "type": "command"
            }
          ],
          "key": "g",
          "name": "Go to...",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "command": "go.godoctor.extract",
              "key": "f",
              "name": "Extract to function",
              "type": "command"
            },
            {
              "command": "go.godoctor.var",
              "key": "v",
              "name": "Extract to variable",
              "type": "command"
            },
            {
              "command": "editor.action.rename",
              "key": "r",
              "name": "Rename symbol",
              "type": "command"
            },
            {
              "command": "editor.action.quickFix",
              "key": ".",
              "name": "Quick fix",
              "type": "command"
            }
          ],
          "key": "r",
          "name": "Refactor...",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "command": "go.playground",
              "key": "P",
              "name": "Run code on Go Playground",
              "type": "command"
            },
            {
              "bindings": [
                {
                  "command": "go.lint.workspace",
                  "key": "l",
                  "name": "Workspace",
                  "type": "command"
                },
                {
                  "command": "go.build.workspace",
                  "key": "b",
                  "name": "Build workspace",
                  "type": "command"
                },
                {
                  "command": "go.vet.workspace",
                  "key": "v",
                  "name": "Vet workspace",
                  "type": "command"
                }
              ],
              "key": "w",
              "name": "Workspace actions...",
              "type": "bindings"
            },
            {
              "bindings": [
                {
                  "command": "go.vet.package",
                  "key": "v",
                  "name": "Vet package",
                  "type": "command"
                },
                {
                  "command": "go.build.package",
                  "key": "b",
                  "name": "Build package",
                  "type": "command"
                },
                {
                  "command": "go.lint.package",
                  "key": "l",
                  "name": "Lint package",
                  "type": "command"
                },
                {
                  "command": "go.install.package",
                  "key": "i",
                  "name": "Install current package",
                  "type": "command"
                },
                {
                  "command": "go.browse.packages",
                  "key": "s",
                  "name": "Browse packages",
                  "type": "command"
                },
                {
                  "command": "go.get.package",
                  "key": "g",
                  "name": "Get package",
                  "type": "command"
                },
                {
                  "command": "go.add.package.workspace",
                  "key": "w",
                  "name": "Add package to workspace",
                  "type": "command"
                }
              ],
              "key": "p",
              "name": "Package actions...",
              "type": "bindings"
            }
          ],
          "key": "a",
          "name": "Actions...",
          "type": "bindings"
        }
      ],
      "keys": ["m", "languageId:go"],
      "name": "Go",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.view.explorer",
          "key": "e",
          "name": "Explorer view",
          "type": "command"
        },
        {
          "command": "workbench.view.extension.mongoDB",
          "key": "m",
          "name": "MongoDB view",
          "type": "command"
        },
        {
          "command": "workbench.view.extension.github-pull-requests",
          "key": "P",
          "name": "Github Pull Requests view",
          "type": "command"
        },
        {
          "command": "workbench.view.extension.project-manager",
          "key": "p",
          "name": "Project Manager view",
          "type": "command"
        },
        {
          "command": "workbench.view.extension.todo-tree-container",
          "key": "t",
          "name": "TODO View",
          "type": "command"
        },
        {
          "command": "workbench.view.extensions",
          "key": "x",
          "name": "Extensions Marketplace",
          "type": "command"
        }
      ],
      "keys": "o",
      "name": "Open...",
      "type": "bindings"
    },
    {
      "command": "projectManager.listProjectsNewWindow",
      "keys": "p.P",
      "name": "List projects (new window)...",
      "type": "command"
    },
    {
      "command": "projectManager.editProjects",
      "keys": "p.e",
      "name": "Edit projects",
      "type": "command"
    },
    {
      "command": "projectManager.listProjects",
      "keys": "p.l",
      "name": "List projects (current window)...",
      "type": "command"
    },
    {
      "command": "projectManager.listProjects",
      "keys": "p.p",
      "name": "List projects (current window)...",
      "type": "command"
    },
    {
      "command": "projectManager.refreshAnyProjects",
      "keys": "p.r",
      "name": "Refresh projects",
      "type": "command"
    },
    {
      "command": "projectManager.saveProject",
      "keys": "p.s",
      "name": "Save project",
      "type": "command"
    },
    {
      "command": "workbench.action.closeEditorsInAllGroups",
      "keys": "q.A",
      "name": "Close current file in all groups",
      "type": "command"
    },
    {
      "command": "workbench.action.closeEditorsToTheLeft",
      "keys": "q.H",
      "name": "Close editors to the left",
      "type": "command"
    },
    {
      "command": "workbench.action.closeEditorsToTheRight",
      "keys": "q.L",
      "name": "Close editors to the right",
      "type": "command"
    },
    {
      "command": "workbench.action.closeAllEditors",
      "keys": "q.a",
      "name": "Close all editors",
      "type": "command"
    },
    {
      "command": "code-runner.stop",
      "keys": "q.c",
      "name": "Stop currently running code",
      "type": "command"
    },
    {
      "command": "workbench.action.debug.stop",
      "keys": "q.d",
      "name": "Stop debugging",
      "type": "command"
    },
    {
      "command": "workbench.action.closeFolder",
      "keys": "q.p",
      "name": "Close current project",
      "type": "command"
    },
    {
      "command": "search.action.openNewEditor",
      "keys": "s.E",
      "name": "New Search Editor",
      "type": "command"
    },
    {
      "command": "editor.action.toggleWordWrap",
      "keys": "t.W",
      "name": "Toggle word wrap",
      "type": "command"
    },
    {
      "command": "extension.toggleTheme",
      "keys": "t.d",
      "name": "Toggle day/night theme",
      "type": "command"
    },
    {
      "command": "settings.cycle.lineNumbers",
      "keys": "t.l",
      "name": "Cycle line numbers",
      "type": "command"
    },
    {
      "command": "workbench.action.toggleTabsVisibility",
      "keys": "t.t",
      "name": "Toggle tab visibility",
      "type": "command"
    },
    {
      "bindings": [
        {
          "commands": [
            "workbench.action.splitEditorRight",
            "workbench.action.quickOpen"
          ],
          "key": "l",
          "name": "...to the right",
          "type": "commands"
        },
        {
          "commands": [
            "workbench.action.splitEditorLeft",
            "workbench.action.quickOpen"
          ],
          "key": "h",
          "name": "...to the left",
          "type": "commands"
        },
        {
          "commands": [
            "workbench.action.splitEditorDown",
            "workbench.action.quickOpen"
          ],
          "key": "j",
          "name": "...to below",
          "type": "commands"
        },
        {
          "commands": [
            "workbench.action.splitEditorUp",
            "workbench.action.quickOpen"
          ],
          "key": "k",
          "name": "...to above",
          "type": "commands"
        }
      ],
      "keys": ["w", "f"],
      "name": "Open file in new group...",
      "type": "bindings"
    },
    {
      "commands": [
        "workbench.action.closePanel",
        "workbench.action.closeSidebar",
        "workbench.action.closeEditorsInOtherGroups"
      ],
      "keys": "w.M",
      "name": "Close sidebar, panel, and other editor groups",
      "type": "commands"
    },
    {
      "command": "workbench.action.focusNextGroup",
      "keys": "w.`",
      "name": "Focus next group",
      "type": "command"
    },
    {
      "command": "workbench.action.focusPreviousGroup",
      "keys": "w.h",
      "name": "Focus previous group",
      "type": "command"
    },
    {
      "command": "workbench.action.focusBelowGroup",
      "keys": "w.j",
      "name": "Focus below group",
      "type": "command"
    },
    {
      "command": "workbench.action.focusAboveGroup",
      "keys": "w.k",
      "name": "Focus above group",
      "type": "command"
    },
    {
      "command": "workbench.action.focusNextGroup",
      "keys": "w.l",
      "name": "Focus next group",
      "type": "command"
    },
    {
      "command": "workbench.action.files.newUntitledFile",
      "keys": "w.t",
      "name": "New untitled file",
      "type": "command"
    },
    {
      "command": "workbench.action.focusPreviousGroup",
      "keys": "w.~",
      "name": "Focus previous group",
      "type": "command"
    },
    {
      "bindings": [
        {
          "command": "editor.action.trimTrailingWhitespace",
          "key": "w",
          "name": "Delete trailing whitespace",
          "type": "command"
        },
        {
          "command": "remove-empty-lines.inDocument",
          "key": "f",
          "name": "Delete empty lines in file",
          "type": "command"
        },
        {
          "command": "remove-empty-lines.inSelection",
          "key": "s",
          "name": "Delete empty lines in selection (adjacent lines if no selection)",
          "type": "command"
        }
      ],
      "keys": ["x", "d"],
      "name": "Delete...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "editor.action.refactor",
          "key": "r",
          "name": "Refactor base command",
          "type": "command"
        },
        {
          "bindings": [
            {
              "command": "go.godoctor.extract",
              "key": "m",
              "name": "Extract method",
              "type": "command"
            },
            {
              "command": "go.godoctor.var",
              "key": "v",
              "name": "Extract variable",
              "type": "command"
            }
          ],
          "key": "g",
          "name": "Golang...",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "command": "python.refactorExtractMethod",
              "key": "m",
              "name": "Extract method",
              "type": "command"
            },
            {
              "command": "python.refactorExtractVariable",
              "key": "v",
              "name": "Extract variable",
              "type": "command"
            }
          ],
          "key": "p",
          "name": "Python...",
          "type": "bindings"
        }
      ],
      "keys": ["x", "r"],
      "name": "Refactor...",
      "type": "bindings"
    },
    {
      "command": "editor.action.formatSelection",
      "keys": "x.=",
      "name": "Format selection",
      "type": "command"
    },
    {
      "command": "wwm.aligncode",
      "keys": "x.A",
      "name": "Align code",
      "type": "command"
    },
    {
      "command": "workbench.action.replaceInFiles",
      "keys": "x.R",
      "name": "Replace in files",
      "type": "command"
    },
    {
      "bindings": [
        {
          "command": "editor.action.copyLinesDownAction",
          "key": "j",
          "name": "Copy line(s) down",
          "type": "command"
        },
        {
          "command": "editor.action.copyLinesUpAction",
          "key": "k",
          "name": "Copy line(s) up",
          "type": "command"
        },
        {
          "command": "fileutils.copyFileName",
          "key": "n",
          "name": "Copy current file name",
          "type": "command"
        },
        {
          "command": "copyFilePath",
          "key": "p",
          "name": "Copy current file absolute path",
          "type": "command"
        },
        {
          "command": "copyRelativeFilePath",
          "key": "P",
          "name": "Copy current file relative path",
          "type": "command"
        }
      ],
      "keys": "y",
      "name": "Yank/Copy...",
      "type": "bindings"
    },
    {
      "command": "workbench.action.previousEditor",
      "keys": "~",
      "name": "Previous Editor (regardless of group)",
      "type": "command"
    }
  ]
}
